import datetime
import os
import random

import Text.Analys.main as textAnalis
import Container as Container
import Web.main as web
import threading
import telebot
from telebot import types
import Container as con
import Audio.Analys.main as audioAnalys
from Email.main import send_code

token = '7594023121:AAEzmV06OdsswTGajipWrQy9zUsTqXQ-RK4'
bot = telebot.TeleBot(token)


def Init():
    textAnalis.Init()


#text = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ")
#print(textAnalis.FindWords(text))

Web = threading.Thread(target=web.Start)
Web.start()
print("Ok")
LoginUsers = {}


@bot.message_handler(content_types='text')
def message_reply(message: telebot.types.Message):
    if message.from_user.id == bot.user.id:
        return
    if message.text == "/start":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button = types.KeyboardButton("üö™ –í–æ–π—Ç–∏")
        markup.add(button)

        bot.send_message(message.chat.id, "–≠—Ç–æ –±–æ—Ç –∫–æ–º–∞–Ω–¥—ã Danski –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ TTS", reply_markup=markup)

    elif message.text == "üö™ –í–æ–π—Ç–∏":
        LoginUsers[message.from_user.id] = -1
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É:")
    elif message.from_user.id in LoginUsers:
        if LoginUsers[message.from_user.id] == -1:
            if "@" in message.text:
                code = str(random.randint(0, 999999)).zfill(6)
                LoginUsers[message.from_user.id] = code
                send_code(code, message.text)
                bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –æ–Ω –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {message.text}:\n")
            else:
                bot.send_message(message.chat.id, f"–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é –ø–æ—á—Ç—É:\n{message.text}")
        else:
            if message.text == LoginUsers[message.from_user.id]:
                bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–¥!")
                del LoginUsers[message.from_user.id]
            else:
                bot.send_message(message.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥!")
    else:
        mes = textAnalis.FindWords(message.text)
        mes = mes.replace("{name}", message.from_user.first_name)
        mes = mes.replace("{nickname}", message.from_user.username)
        mes = mes.replace("{time}", str(datetime.datetime.now().time()))
        mes = mes.replace("{date}", str(datetime.datetime.now().date()))
        if mes != "":
            bot.send_message(message.chat.id, mes)
        else:
            bot.send_message(message.chat.id, mes)


@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    print("audio")
    file = bot.get_file(message.voice.file_id).file_path
    voice_data = bot.download_file(file)
    thread = threading.Thread(target=process_audio, args=(voice_data, message.chat.id, message))
    thread.start()


def process_audio(voice_data, chat_id, message):
    text = audioAnalys.GetAudio(voice_data)
    print("audio2")
    mes = textAnalis.FindWords(text)
    print(mes)
    mes = mes.replace("{name}", message.from_user.first_name)
    mes = mes.replace("{nickname}", message.from_user.username)
    mes = mes.replace("{time}", str(datetime.datetime.now().time()))
    mes = mes.replace("{date}", str(datetime.datetime.now().date()))
    bot.send_message(chat_id, mes)


bot.infinity_polling()
